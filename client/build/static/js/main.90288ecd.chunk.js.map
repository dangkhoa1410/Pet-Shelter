{"version":3,"sources":["components/Form.jsx","views/AddPet.jsx","views/Main.jsx","views/UpdatePet.jsx","views/OnePet.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","props","className","to","onSubmit","onSubmitHandler","htmlFor","type","name","onChange","onChangeHandler","value","form","error","message","description","skill1","skill2","skill3","disabled","AddPet","useState","setForm","setError","setNameError","setDisabled","dup","setDup","NameValid","axios","get","then","res","data","onePet","catch","err","console","log","e","preventDefault","post","errors","navigate","target","Main","allPet","setList","link","setLink","useEffect","onClickEdit","onClickDetail","onClick","scope","map","pet","idx","_id","UpdatePet","setPet","id","put","OnePet","update","setUpdate","delete","count","like","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90288ecd.chunk.js","sourcesContent":["import { Link } from '@reach/router';\r\nimport React, {useEffect, useState} from 'react'\r\n\r\nconst Form = props => {\r\n    return (\r\n        <div className=\"row-sm-6\">\r\n            <div className=\"row-sm-6\">\r\n                <div className=\"row-sm-6\">\r\n                    <div className=\"col-sm-2 d-flex justify-content-between\">\r\n                        <Link to=\"/\"><h5>Home</h5></Link>\r\n                        <span> | </span>\r\n                        <Link to=\"/pets/add\"><h5>Add pet</h5></Link>\r\n                    </div>\r\n                </div>\r\n            </div>        \r\n            <div className=\"row ml-2 mt-4 mb-4\">\r\n                <h5>Enter your new pet here</h5>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <form onSubmit = {props.onSubmitHandler}>\r\n                        <div className=\"col\">\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">Pet Name</label>\r\n                                <input type=\"text\" name=\"name\" onChange= {props.onChangeHandler} value={props.form.name}/>\r\n                            </div>\r\n                                <span></span>\r\n                                {\r\n                                props.error.name ? <div className=\"text-danger offset-2\"> {props.error.name.message}</div> : \"\"\r\n                                }\r\n                            <div className=\"form-group row\">\r\n                                <label htmlFor=\"type\" className=\"col-sm-2 col-form-label\">Type</label>\r\n                                <input type=\"text\" name=\"type\" onChange= {props.onChangeHandler} value={props.form.type}/>\r\n                            </div>\r\n                                {\r\n                                    props.error.type ? <div className=\"text-danger offset-2\"> {props.error.type.message}</div> : \"\"\r\n                                }\r\n                                <div className=\"form-group row\">\r\n                                <label htmlFor=\"descrption\" className=\"col-sm-2 col-form-label\">Description</label>\r\n                                <input type=\"text\" name=\"description\" onChange= {props.onChangeHandler} value={props.form.description}/>\r\n                            </div>\r\n                                {\r\n                                    props.error.description ? <div className=\"text-danger offset-2\"> {props.error.description.message}</div> : \"\"\r\n                                }\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <h4>Skills: (Optional)</h4>\r\n                            <div className=\"form-group row\">\r\n                                    <label htmlFor=\"skill1\" className=\"col-sm-2 col-form-label\">Skill 1</label>\r\n                                    <input type=\"text\" name=\"skill1\" onChange= {props.onChangeHandler} value={props.form.skill1}/>\r\n                                </div>\r\n                                    <span></span>\r\n                                    \r\n                                <div className=\"form-group row\">\r\n                                    <label htmlFor=\"skill2\" className=\"col-sm-2 col-form-label\">Skill 2</label>\r\n                                    <input type=\"text\" name=\"skill2\" onChange= {props.onChangeHandler} value={props.form.skill2}/>\r\n                                </div>\r\n                                    \r\n                                    <div className=\"form-group row\">\r\n                                    <label htmlFor=\"skill3\" className=\"col-sm-2 col-form-label\">Skill 3</label>\r\n                                    <input type=\"text\" name=\"skill3\" onChange= {props.onChangeHandler} value={props.form.skill3}/>\r\n                                </div>\r\n                                    \r\n                            </div>\r\n                        <button type=\"submit\" className=\"btn btn-success mt-2\" disabled={props.disabled} >Add pet</button>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\nexport default Form;","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { Link, navigate } from '@reach/router';\r\nimport Form from '../components/Form';\r\n\r\nconst AddPet = props => {\r\n    const [form, setForm] = useState({\r\n        name: \"\",\r\n        type: \"\",\r\n        description: \"\",\r\n        skill1: \"\",\r\n        skill2: \"\",\r\n        skill3: \"\"\r\n    })\r\n    const [error, setError] = useState({})\r\n    const [nameError, setNameError] = useState(\"\")\r\n    const[disabled, setDisabled] = useState(false)\r\n    const [dup, setDup] = useState(null)\r\n\r\n    const NameValid = name => {\r\n        axios.get(`http://localhost:8000/api/pet/name/${name}`)\r\n            .then(res => setDup(res.data.onePet))\r\n            .catch(err => console.log(\"Error getting a pet\", err))\r\n        if(dup){\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    \r\n    const onSubmitHandler = e => {\r\n        e.preventDefault()\r\n        const name = form.name\r\n        console.log(\"Name\", name)\r\n        console.log(dup)\r\n        console.log(NameValid)\r\n        \r\n        if(!NameValid(name)){\r\n            setNameError(\"Name must be unique!\")\r\n            navigate(\"/pets/add\")\r\n        } else {\r\n            axios.post('http://localhost:8000/api/pet/new',form)\r\n                .then(res => {                \r\n                    if(res.data.error){\r\n                        setError(res.data.error.errors)\r\n                        setDisabled(true)\r\n                        console.log(\"Error adding pet\", res.data.error.errors)\r\n                    } else {\r\n                        setForm({\r\n                            name: \"\",\r\n                            type: \"\",\r\n                            description: \"\",\r\n                            skill1: \"\",\r\n                            skill2: \"\",\r\n                            skill3: \"\"\r\n                        })\r\n                        navigate(\"/\")\r\n                    }\r\n                })\r\n\r\n        }\r\n            \r\n        \r\n    }\r\n    \r\n    const onChangeHandler = e => {\r\n        setDisabled(false)\r\n        setForm({...form,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitHandler = {onSubmitHandler} onChangeHandler = {onChangeHandler} form = {form} error={error} disabled = {disabled}></Form>\r\n    )\r\n}\r\nexport default AddPet;","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { Link, navigate } from '@reach/router'\r\n\r\nconst Main = props => {\r\n    const [allPet, setList] = useState(null)\r\n    const [link,setLink] = useState('http://localhost:8000/api/pet/')\r\n    useEffect(()=>{\r\n        axios.get(link)\r\n            .then(res => setList(res.data.allPet))\r\n            .catch(err => console.log(\"Error getting all pets\", err))\r\n    },[allPet])\r\n    \r\n    const onClickEdit = e => {\r\n        e.preventDefault()\r\n        navigate(`/pets/${e.target.value}/edit`)\r\n    }\r\n    const onClickDetail = e => {\r\n        e.preventDefault()\r\n        navigate(`/pets/${e.target.value}`)\r\n    }\r\n    const onClickAdd = e => {\r\n        navigate(\"/pets/new\")\r\n    }\r\n    const onClickType = e => {\r\n        e.preventDefault()\r\n        setLink('http://localhost:8000/api/pet/sort/type')\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"row-sm-6\">\r\n                        \r\n            <div className=\"row d-flex justify-content-between p-4\">\r\n                <h3>These pets are looking for a good home</h3>\r\n                <div>\r\n                    <button onClick = {onClickType} className=\"btn btn-primary mx-2\">Sort Pet</button>\r\n                    <button onClick = {onClickAdd} className=\"btn btn-primary mx-2\">Add a Pet</button>\r\n                </div>\r\n            </div>\r\n            <table className=\"table table-striped table-bordered centered\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Type</th>\r\n                    <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>                    \r\n                    {\r\n                        allPet ? allPet.map( (pet,idx) => {\r\n                            return (\r\n                                <tr key={idx}>\r\n                                    <td>{pet.name}</td>\r\n                                    <td>{pet.type}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-primary mx-1\" value={pet._id} name = {pet.name} onClick = {onClickDetail}>Detail</button>\r\n                                        <button className=\"btn btn-primary mx-1\" value={pet._id} name = {pet.name} onClick = {onClickEdit}>Edit</button>\r\n                                    </td>\r\n                                </tr>)\r\n                        })\r\n                        : <tr></tr>\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Main","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { Link, navigate } from '@reach/router';\r\nimport Form from '../components/Form';\r\n\r\nconst UpdatePet = props => {\r\n    const [onePet, setPet] = useState({\r\n        name: \"\",\r\n        type: \"\",\r\n        description: \"\",\r\n        skill1: \"\",\r\n        skill2: \"\",\r\n        skill3: \"\"\r\n    })\r\n    const [error, setError] = useState({})\r\n    const[disabled, setDisabled] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8000/api/pet/${props.id}`)\r\n            .then(res => setPet(res.data.onePet))\r\n            .catch(err => console.log(\"Error getting a pet\", err))\r\n    },[])\r\n    \r\n    const onSubmitHandler = e => {\r\n        e.preventDefault()\r\n        axios.put(`http://localhost:8000/api/pet/update/${props.id}`,onePet)\r\n            .then(res => {\r\n                if(res.data.error){\r\n                    setError(res.data.error.errors)\r\n                    setDisabled(true)\r\n                    console.log(\"Error updating a pet\", error)\r\n                } else {\r\n                    setPet({\r\n                        name: \"\",\r\n                        type: \"\",\r\n                        description: \"\",\r\n                        skill1: \"\",\r\n                        skill2: \"\",\r\n                        skill3: \"\"\r\n                    })\r\n                    navigate(\"/\")\r\n                }\r\n            })\r\n            \r\n        \r\n    }\r\n    const onChangeHandler = e => {\r\n        setDisabled(false)\r\n        setPet({...onePet,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitHandler = {onSubmitHandler} onChangeHandler = {onChangeHandler} form = {onePet} error={error} disabled = {disabled}></Form>\r\n    )\r\n}\r\nexport default UpdatePet;","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { Link, navigate } from '@reach/router';\r\n\r\nconst OnePet = props => {\r\n    const [onePet, setPet] = useState({})\r\n    const [update, setUpdate] = useState(true)\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8000/api/pet/${props.id}`)\r\n            .then(res => setPet(res.data.onePet))\r\n            .catch(err => console.log(\"Error getting a pet\", err))\r\n    },[])\r\n    useEffect(()=>{\r\n        axios.put(`http://localhost:8000/api/pet/update/${props.id}`, onePet)            \r\n    },[update])\r\n    const onClickHandler = e => {\r\n        e.preventDefault()\r\n        axios.delete(`http://localhost:8000/api/pet/delete/${props.id}`)\r\n        navigate(\"/\")\r\n    }\r\n    const onClickHome = e => {\r\n        navigate(\"/\")\r\n    }\r\n    // const [count, setCount] = useState(parseInt(onePet.like))\r\n\r\n    const onClickLike = e => {        \r\n        console.log(\"current count\", onePet.count)        \r\n        setPet({...onePet,[e.target.name]:(onePet.like+1)})\r\n        setUpdate(!update)        \r\n    }\r\n\r\n    return (\r\n        \r\n        <div>\r\n            {\r\n                onePet ? \r\n                <>\r\n                    <div className=\"inline-group mb-2\">\r\n                        <h3>Detail about: {onePet.name}</h3> \r\n                        <button onClick = {onClickHome} className=\"btn btn-success mx-1 \">Home</button>\r\n                        <button onClick = {onClickHandler} className=\"btn btn-danger mx-4\">Adopt {onePet.name}</button>\r\n                    </div>                   \r\n                    <div className=\"border p-4\">\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                <h5>Pet Type:</h5>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <p>{onePet.type}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                <h5>Description:</h5>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <p>{onePet.description}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                <h5>Skills:</h5>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <p>{onePet.skill1}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                <h5></h5>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <p>{onePet.skill2}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                <h5></h5>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                <p>{onePet.skill3}</p>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"btn btn-success\" name=\"like\" onClick={onClickLike}>Like {onePet.name}</button>\r\n                        <span> {onePet.like} like(s)</span>\r\n                    </div>\r\n                </> : \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OnePet\r\n\r\n","import './App.css';\nimport { Link, Router } from '@reach/router';\nimport bootstrap from 'bootstrap/dist/css/bootstrap.min.css'\nimport AddPet from './views/AddPet';\nimport Main from './views/Main';\nimport UpdatePet from './views/UpdatePet';\nimport OnePet from './views/OnePet';\n\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"jumbotron\">\n        <h1>Pet Shelter</h1>\n          <div className=\"col-sm-3 d-flex justify-content-between\">\n            {/* <Link to=\"players/list\"><h5>Manage Players</h5></Link>\n            <span> | </span>\n            <Link to=\"status/game/1\"><h5>Manage Player Status</h5></Link> */}\n\n          </div>\n        </div>\n\n        <Router>\n          <Main path=\"/\"></Main>\n          <AddPet path=\"/pets/new\"></AddPet>\n          <OnePet path=\"/pets/:id\"></OnePet>\n          <UpdatePet path=\"/pets/:id/edit\"></UpdatePet>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}